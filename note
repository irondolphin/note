#!/usr/bin/env python3
import os
import pickle

def save_note(note):
    with open(".note.dat", "wb") as note_file:
        pickle.dump(note, note_file)

def load_note():
    note = []
    if os.path.exists(".note.dat"):
        with open(".note.dat", "rb") as note_file:
            try:
                note = pickle.load(note_file)
            except EOFError:
                note = []
    return note

def add_note(note):
    titolo = input("Inserisci il nome della nota: ")
    print("Scrivi la nota (termina con una riga vuota):")
    
    # Raccogli il contenuto della nota su pi√π righe
    contenuto = []
    while True:
        line = input()
        if line == "":
            break
        contenuto.append(line)
    
    # Unisci le righe con newline per formattare correttamente in Markdown
    contenuto_markdown = "\n".join(contenuto)
    note.append((titolo, contenuto_markdown))
    save_note(note)
    print("Nota salvata")

def view_note_markdown(note):
    for titolo, contenuto in note:
        print(f"\n‚îÇ {titolo}\n")
        print(f"{contenuto}\n")
        print("‚îÄ" * 40)

def view_titolo(note):
    print("‚îå" + "‚îÄ" * 15)
    for titolo, _ in note:
        print(f"‚îÇ {titolo}")
    print("‚îî" + "‚îÄ" * 15)

def search_note_markdown(note):
    search_title = input("Inserisci il titolo parziale della nota da cercare: ")
    found = False
    for titolo, contenuto in note:
        if search_title.lower() in titolo.lower():
            print(f"\n‚îÇ {titolo}\n")
            print(f"{contenuto}\n")
            print("‚îÄ" * 40)
            found = True
    if not found:
        print("Nessuna nota trovata con quel titolo parziale.")

def modify_add_note_markdown(note):
    search_title = input("Inserisci il titolo della nota da modificare: ")
    for i, (titolo, contenuto) in enumerate(note):
        if titolo.lower() == search_title.lower():
            print("Inserisci il nuovo contenuto (termina con una riga vuota):")
            new_content = []
            while True:
                line = input()
                if line == "":
                    break
                new_content.append(line)
            new_content_markdown = "\n".join(new_content)
            contenuto += "\n" + new_content_markdown
            note[i] = (titolo, contenuto)
            save_note(note)
            print("Nota modificata con successo.")
            return
    print("Nessuna nota trovata con quel titolo.")

def modify_note_markdown(note):
    search_title = input("Inserisci il titolo della nota da modificare: ")
    for i, (titolo, contenuto) in enumerate(note):
        if titolo.lower() == search_title.lower():
            print("Inserisci il nuovo contenuto (termina con una riga vuota):")
            new_content = []
            while True:
                line = input()
                if line == "":
                    break
                new_content.append(line)
            new_content_markdown = "\n".join(new_content)
            note[i] = (titolo, new_content_markdown)
            save_note(note)
            print("Nota modificata con successo.")
            return
    print("Nessuna nota trovata con quel titolo.")

def delete_note(note):
    search_title = input("Inserisci il titolo della nota da eliminare: ")
    for i, (titolo, _) in enumerate(note):
        if titolo.lower() == search_title.lower():
            del note[i]
            save_note(note)
            print("Nota eliminata con successo.")
            return
    print("Nessuna nota trovata con quel titolo.")

def visualizza_aiuto():
    print("‚îå" + "‚îÄ" * 40 + "‚î¨" + "‚îÄ" * 40 + "‚îê" )
    print("‚îÇ digita 1 per creare una nota" + " " * 11 + "‚îÇ digita 2 per visualizzare le note" + " " * 6 + "‚îÇ")
    print("‚îú" + "‚îÄ" * 40 + "‚îº" + "‚îÄ" * 40 + "‚î§" )
    print("‚îÇ digita 3 per cercare una nota" + " " * 10 + "‚îÇ digita 4 per sostituire il testo" + " " * 7 + "‚îÇ")
    print("‚îÇ in base al titolo" + " " * 22 + "‚îÇ integrale di una nota" + " " * 18 + "‚îÇ")
    print("‚îú" + "‚îÄ" * 40 + "‚îº" + "‚îÄ" * 40 + "‚î§" )
    print("‚îÇ digita 5 per aggiungere" + " " * 16 + "‚îÇ digita 6 per eliminare una nota" + " " * 8 + "‚îÇ")
    print("‚îÇ il testo ad una nota" + " " * 19 + "‚îÇ" + " " * 40 + "‚îÇ")
    print("‚îú" + "‚îÄ" * 40 + "‚îº" + "‚îÄ" * 40 + "‚î§" )
    print("‚îÇ digita 7 per visualizzare i titoli" + " " * 5 + "‚îÇ digita 8 per uscire dalla applicazione" + " " + "‚îÇ")
    print("‚îî" + "‚îÄ" * 40 + "‚î¥" + "‚îÄ" * 40 + "‚îò" )

def main():
    note = load_note()

    while True:
        print("‚îÇ Note:")
        print("‚îÇ 1: Crea ‚îÄ 2: Visualizza ‚îÄ 3: Cerca ‚îÄ 4: Modifica ‚îÄ 5: Aggiunta a nota ‚îÄ 6: Elimina ‚îÄ 7: Visualizza titoli ‚îÄ 8: Esci")
        choice = input("‚îî‚îÄ‚ñ∂ Scegli un'opzione da 1 a 8: ")

        if choice == "aiuto":
            visualizza_aiuto()
        if choice == "1":
            add_note(note)
        elif choice == "2":
            view_note_markdown(note)
        elif choice == "3":
            search_note_markdown(note)
        elif choice == "4":
            modify_note_markdown(note)
        elif choice == "5":
            modify_add_note_markdown(note)
        elif choice == "6":
            delete_note(note)
        elif choice == "7":
            view_titolo(note)
        elif choice == "8":
            print("\nA che serve scrivere, tanto so che non leggerete ü•∫")
            break
        else:
            print("Scelta non valida. Si prega di rispondere con 1, 2, 3, 4, 5, 6, 7 o 8")

if __name__ == "__main__":
    main()
